{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyPB0aRE0GQ/P2HcxTwDXpR2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"BI5NakPKY-hn"},"outputs":[],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["# import libraries\n","\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","sns.set_style('darkgrid')\n","\n","from scipy.stats import norm\n","from scipy import stats\n","\n","import missingno as msno\n","import warnings\n","warnings.filterwarnings('ignore')\n","%matplotlib inline"],"metadata":{"id":"O7ybReA9ZajS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# data load\n","\n","path = '/content/drive/MyDrive/dacon/2023.09.27/dataset'\n","\n","origin = pd.read_csv(path + '/train.csv')\n","df = pd.read_csv(path + '/train.csv')\n","t_df = pd.read_csv(path + '/test.csv')"],"metadata":{"id":"eij59EQcZ1w3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 1. 데이터 살펴보기"],"metadata":{"id":"mwgE2Yl4aLnq"}},{"cell_type":"markdown","source":["### 1.1 통계적 측정"],"metadata":{"id":"B4Jv_WAHffq7"}},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"w0UwPkmYaNAa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 데이터 테이블\n","\"\"\"\n","메모\n","여기에서는 '추석까지 남은 기간(주)' , '프로모션 여부'의 경우\n","범주형 데이터이고 , '추석까지 남은 기간(주)는 0 ~ 2 의 범주를 가지고\n","'프로모션 여부'의 경우에는 0 과 1 의 범주를 가진다.\n","\"\"\"\n","\n","df.describe().style.background_gradient(cmap = 'pink_r')"],"metadata":{"id":"024xYP2KhFuc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"1hxnGxfghzY2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 2. EDA"],"metadata":{"id":"pt_bBmqeh2K3"}},{"cell_type":"code","source":["df = df.rename(\n","    columns = {\n","        '추석까지 남은 기간(주)' : 'time' ,\n","        '쇼핑몰 구분' : 'shop_category' ,\n","        '가격(원)' : 'price(won)' ,\n","        '프로모션 여부' : 'promotion' ,\n","        '도시 유형' : 'city_type' ,\n","        '지역 유형' : 'region_type' ,\n","        '쇼핑몰 유형' : 'shop_type' ,\n","        '선물 유형' : 'present_type' ,\n","        '수요량' : 'target'\n","    }\n",")"],"metadata":{"id":"ThGW15amjTxg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.columns"],"metadata":{"id":"vBeNH7i8jt1o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["t_df = t_df.rename(\n","    columns = {\n","        '추석까지 남은 기간(주)' : 'time' ,\n","        '쇼핑몰 구분' : 'shop_category' ,\n","        '가격(원)' : 'price(won)' ,\n","        '프로모션 여부' : 'promotion' ,\n","        '도시 유형' : 'city_type' ,\n","        '지역 유형' : 'region_type' ,\n","        '쇼핑몰 유형' : 'shop_type' ,\n","        '선물 유형' : 'present_type'\n","    }\n",")"],"metadata":{"id":"Rp76UswnjvfO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["t_df.columns"],"metadata":{"id":"7dndwdXikHzg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# unique\n","\n","cols = ['shop_category' , 'city_type' , 'region_type' , 'shop_type' , 'present_type']\n","\n","data = df[cols].nunique().sort_values(ascending = False)\n","\n","g = sns.barplot(\n","    y = data.values ,\n","    x = data.index ,\n","\n",")\n","\n","for p in g.patches:\n","    g.text(p.get_x() + p.get_width() / 2 ,\n","           p.get_y() + p.get_height() ,\n","           f\"{p.get_height():.0f}\" ,\n","           ha = 'center') # 가운데 정렬"],"metadata":{"id":"fMXAVCFcpeCF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2.1 결측값과 이상치"],"metadata":{"id":"JIYlb2fCh3i2"}},{"cell_type":"code","source":["# 결측값 확인\n","\n","msno.matrix(df)"],"metadata":{"id":"03m05dnVh0qq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 이상치 확인\n","\n","# numerical feature\n","\n","sns.boxplot(df['price(won)'])\n","plt.xlabel('Price(won)')\n","plt.title('price(won) box plot')"],"metadata":{"id":"Yx9IbngPjPtd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# categorical feature\n","\n","\"\"\"\n","메모\n","특정 범주의 빈도수가 매우 높기 때문에 추가적인 분석\n","필요\n","\"\"\"\n","\n","cols = ['city_type' , 'region_type' , 'shop_type']\n","\n","data = df[cols]\n","\n","fig , ax = plt.subplots(1 , 3)\n","fig.set_size_inches((12,8))\n","\n","sns.countplot(\n","    data = data ,\n","    x = 'city_type' ,\n","    ax = ax[0]\n",")\n","ax[0].set_xticklabels(ax[0].get_xticklabels() , rotation = 90)\n","\n","sns.countplot(\n","    data = data ,\n","    x = 'region_type' ,\n","    ax = ax[1]\n",")\n","\n","sns.countplot(\n","    data = data ,\n","    x = 'shop_type' ,\n","    ax = ax[2]\n",")"],"metadata":{"id":"GeCT6td9mx_V"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# present_type\n","\n","col = 'present_type'\n","data = df[[col]]\n","\n","plt.figure(figsize = (8 , 14))\n","\n","sns.countplot(\n","    data = data ,\n","    y = 'present_type'\n",")"],"metadata":{"id":"LClQWJYG62Lf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# shop_category\n","\n","col = 'shop_category'\n","data = df[[col]]\n","\n","plt.figure(figsize = (8 , 17))\n","\n","sns.countplot(\n","    data = data ,\n","    y = 'shop_category'\n",")"],"metadata":{"id":"BetXHAHbEfdy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2.2 Target Feature"],"metadata":{"id":"_QaiSah5ud1y"}},{"cell_type":"code","source":["data = df['target']\n","\n","sns.distplot(data , fit = norm , color = 'g')\n","\n","(mu , sigma) = norm.fit(data)\n","\n","plt.legend(['Normal dist. ($\\mu=$ {:.2f} and $\\sigma=$ {:.2f} )'.format(mu , sigma)] ,\n","           loc = 'best')\n","plt.title(\"Target distribution\")\n","\n","fig = plt.figure()\n","res = stats.probplot(data , plot = plt)\n","plt.show()"],"metadata":{"id":"AcOckQKVuXyc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"target data skew : {:.2f}\".format(data.skew()))\n","print(\"target data kurtosis : {:.2f}\".format(data.kurtosis()))"],"metadata":{"id":"8uHnNRaJutQj"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2.3 Numerical Feature"],"metadata":{"id":"SnDthd9pFWJF"}},{"cell_type":"code","source":["# price(won)\n","\n","col = 'price(won)'\n","data = pd.concat([df[col] , df['target']] , axis = 1)\n","\n","sns.scatterplot(\n","    data = data ,\n","    x = 'price(won)' ,\n","    y = 'target' ,\n","    color = 'g'\n",")"],"metadata":{"id":"aWDnrjZWFpTx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2.4 Categorical Feature"],"metadata":{"id":"FQLF4BNQGYLS"}},{"cell_type":"code","source":["df.columns"],"metadata":{"id":"P9d7giy1GcYd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def box_plot(col_1 , col_2 = 'target'):\n","    data = pd.concat([df[col_1] , df[col_2]] , axis = 1)\n","\n","    sns.boxplot(\n","        data = data ,\n","        x = col_1 ,\n","        y = col_2\n","    )"],"metadata":{"id":"SIjmdIGUG6Sq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# time\n","\n","box_plot('time')"],"metadata":{"id":"5SLPT_BTGalM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# shop_category\n","\n","plt.figure(figsize = (13 , 8))\n","box_plot('shop_category')\n","plt.xticks(rotation = 90)"],"metadata":{"id":"6JrfIi7kG144"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# promotion\n","\n","box_plot('promotion')"],"metadata":{"id":"dVFngSG0HQU-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# city_type\n","\n","plt.figure(figsize = (10 , 8))\n","box_plot('city_type')\n","plt.xticks(rotation = 45)"],"metadata":{"id":"2zAEJ8QpHZtY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# region_type\n","\n","box_plot('region_type')"],"metadata":{"id":"KcpcaIPIHfNV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# shop_type\n","\n","box_plot('shop_type')"],"metadata":{"id":"md4rxIOWHkjS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# present_type\n","\n","plt.figure(figsize = (13 , 8))\n","box_plot('present_type')\n","plt.xticks(rotation = 90)"],"metadata":{"id":"Twkkg8p6Hp4R"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 3. Preprocessing"],"metadata":{"id":"m8eXd39e5Er6"}},{"cell_type":"markdown","source":["### 3.1 Target data 처리"],"metadata":{"id":"NTuA0qEV5MD2"}},{"cell_type":"code","source":["data = np.log1p(df['target'])\n","\n","sns.distplot(data , fit = norm , color = 'g')\n","\n","(mu , sigma) = norm.fit(data)\n","\n","plt.legend(['Normal dist. ($\\mu=$ {:.2f} and $\\sigma=$ {:.2f} )'.format(mu , sigma)] ,\n","           loc = 'best')\n","plt.title(\"Target distribution\")\n","\n","fig = plt.figure()\n","res = stats.probplot(data , plot = plt)\n","plt.show()"],"metadata":{"id":"25h_CwJS5LBP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(\"target data skew : {:.2f}\".format(data.skew()))\n","print(\"target data kurtosis : {:.2f}\".format(data.kurtosis()))"],"metadata":{"id":"zide7ZN-7f6b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['target'] = data"],"metadata":{"id":"zdTNRFKq7hr2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 3.2 Categorical Feature 처리"],"metadata":{"id":"jDM9JaQxCq-R"}},{"cell_type":"code","source":["!pip install category_encoders"],"metadata":{"id":"aecgIFzMDu7Z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Target Encoding Import\n","\n","from category_encoders.target_encoder import TargetEncoder\n","encoder = TargetEncoder()"],"metadata":{"id":"DqRJspcaDvk-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# shop_category\n","\n","\"\"\"\n","메모\n","높은 카디널리티를 가지는 feature의 경우에는\n","target encoder를 사용해서 처리\n","\"\"\"\n","\n","data = encoder.fit_transform(df['shop_category'] , df['target'])\n","df['shop_category'] = data\n","t_df['shop_category'] = encoder.transform(t_df['shop_category'])"],"metadata":{"id":"wwexUbJ7DvqD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# present_type\n","\n","data = encoder.fit_transform(df['present_type'] , df['target'])\n","df['present_type'] = data\n","t_df['present_type'] = encoder.transform(t_df['present_type'])"],"metadata":{"id":"qwELU_nVKQ5p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# city_type\n","\n","data = encoder.fit_transform(df['city_type'] , df['target'])\n","df['city_type'] = data\n","t_df['city_type'] = encoder.transform(t_df['city_type'])"],"metadata":{"id":"BsKAceEBKlo5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# region_type\n","\n","\"\"\"\n","메모\n","10개 이하의 카디널리티의 경우는 onehot encoder 사용\n","\"\"\"\n","\n","data = encoder.fit_transform(df['region_type'] , df['target'])\n","df['region_type'] = data\n","t_df['region_type'] = encoder.transform(t_df['region_type'])"],"metadata":{"id":"12AozGtTKxJ6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# shop_type\n","\n","data = encoder.fit_transform(df['shop_type'] , df['target'])\n","df['shop_type'] = data\n","t_df['shop_type'] = encoder.transform(t_df['shop_type'])"],"metadata":{"id":"dW2cElLYLZ0I"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 3.3 Numerical Feature 처리"],"metadata":{"id":"um4RgAQgL7gN"}},{"cell_type":"code","source":["\"\"\"\n","메모\n","스케일이 다르기 때문에 수치형을 변환 후에 스케일링 작업을 수행\n","\"\"\"\n","\n","from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","cols = ['shop_category' , 'price(won)' , 'city_type' , 'present_type' ,\n","        'region_type' , 'shop_type']\n","\n","df[cols] = scaler.fit_transform(df[cols])\n","t_df[cols] = scaler.transform(t_df[cols])"],"metadata":{"id":"LLnkFgC2L9wU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# heatmap\n","\n","sns.heatmap(df.corr() , cmap = \"summer_r\" , annot = True , fmt = '.2f')\n","plt.title('Feature Correlation')"],"metadata":{"id":"S7u31PGkuzt5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 4. Baseline model"],"metadata":{"id":"Y1ePu2EtM41Z"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","df.drop(['ID'] , axis = 1 , inplace = True)\n","t_df.drop(['ID'] , axis = 1 , inplace = True)\n","\n","target = df['target']\n","df.drop(['target'] , axis = 1 , inplace = True)"],"metadata":{"id":"sLsty7oCnVgn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 분리\n","\n","trainX , testX , trainY , testY = train_test_split(df , target , test_size = 0.3 , random_state = 42)"],"metadata":{"id":"SWWUUL_wNaaw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\"\"\"\n","메모\n","LinearRegression을 통해서 먼저 간단하게 예측 후에\n","성능을 올리기 위해서 Feature Engineering을 수행\n","\n","Baseline model -> voting & tuning -> feature engineering\n","\"\"\"\n","\n","from sklearn.linear_model import LinearRegression\n","\n","model = LinearRegression()\n","model.fit(trainX , trainY)"],"metadata":{"id":"Nj7aOgaSM-5G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"R2 score (train) : {round(model.score(trainX , trainY) , 2)}\")\n","print(f\"R2 score (test) : {round(model.score(testX , testY) , 2)}\")"],"metadata":{"id":"RLgSNPr6OCDl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# predict\n","\n","prediction = model.predict(testX)"],"metadata":{"id":"hYQckW2APA9N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","\n","print(f\"RMSE : {round(mean_squared_error(testY , prediction , squared = True) , 2)}\")"],"metadata":{"id":"-AJWSU_pPHOu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 원래 값으로 되돌리기\n","\n","prediction = np.expm1(prediction).astype(int)"],"metadata":{"id":"bpeym54UTGQ8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 제출용 데이터의 예측\n","\n","submission = pd.read_csv(path + \"/sample_submission.csv\")\n","\n","pred = model.predict(t_df)\n","pred = np.expm1(pred).astype(int)\n","\n","submission['수요량'] = pred\n","submission"],"metadata":{"id":"owZj2EruWb2x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# csv파일로 저장\n","\n","submission.to_csv(path + '/submission.csv' , index = False)"],"metadata":{"id":"8QhZl1iJW1rS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 5. Feature Engineering"],"metadata":{"id":"ObAAF4JQXvLl"}},{"cell_type":"markdown","source":["## 6. Voting & Model Tuning"],"metadata":{"id":"XwvDhnFYXyTi"}},{"cell_type":"code","source":["# model import\n","\n","from sklearn.ensemble import RandomForestRegressor , GradientBoostingRegressor , AdaBoostRegressor , BaggingRegressor\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.kernel_ridge import KernelRidge\n","from sklearn.linear_model import Ridge , Lasso\n","from sklearn.linear_model import ElasticNet\n","from sklearn.svm import SVR\n","from lightgbm import LGBMRegressor\n","from xgboost import XGBRegressor\n","from sklearn.ensemble import VotingRegressor\n","\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.model_selection import KFold , cross_val_score , learning_curve"],"metadata":{"id":"4iUTlV6HXx5j"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 6.1 model selection"],"metadata":{"id":"VWSW_qbUo6Gb"}},{"cell_type":"code","source":["kfold = KFold(n_splits = 10)"],"metadata":{"id":"_ZS5rpldqmwn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["random_state = 42\n","regressors = []\n","regressors.append(LinearRegression())\n","regressors.append(RandomForestRegressor(random_state = random_state))\n","regressors.append(GradientBoostingRegressor(random_state = random_state))\n","regressors.append(AdaBoostRegressor(random_state = random_state))\n","regressors.append(BaggingRegressor(random_state = random_state))\n","regressors.append(KernelRidge())\n","regressors.append(Ridge(random_state = random_state))\n","regressors.append(Lasso(random_state = random_state))\n","regressors.append(ElasticNet(random_state = random_state))\n","regressors.append(SVR())\n","regressors.append(LGBMRegressor(random_state = random_state))\n","regressors.append(XGBRegressor(random_state = random_state))\n","\n","cv_results = []\n","for regressor in regressors:\n","    cv_results.append(-cross_val_score(regressor , trainX , y = trainY , scoring = 'neg_root_mean_squared_error' , cv = kfold))\n","\n","cv_means = []\n","cv_std = []\n","\n","for cv_result in cv_results:\n","    cv_means.append(cv_result.mean())\n","    cv_std.append(cv_result.std())\n","\n","cv_res = pd.DataFrame(\n","    {\n","        \"CrossValMean\" : cv_means ,\n","        \"CrossValError\" : cv_std ,\n","        \"Models\" : [\n","            \"LR\" , \"RF\" , \"GBR\" , \"Ada\" , \"Bagging\" , \"Kernel\" , \"Ridge\" , \"Lasso\" , \"Elastic\" , \"SVR\" ,\n","            \"LGBM\" , \"XGBR\"\n","        ]\n","    }\n",")\n","\n","g = sns.barplot(x = \"CrossValMean\" , y = \"Models\" , data = cv_res , palette = \"Set3\" , orient = \"h\" , **{'xerr' : cv_std})\n","plt.xlabel('Mean RMSE')\n","plt.title('Model Selection Plot')"],"metadata":{"id":"BO26EWnbo70N"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 6.2 Hyperparameter Tuning"],"metadata":{"id":"9t2LnvIaAPX4"}},{"cell_type":"code","source":["\"\"\"\n","메모\n","RMSE 스코어로 본 결과 , 일단은 RF , GBR , SVR , LGBM , XGBR\n","이렇게 5가지 모델을 Tuning 후에 Voting하고 제출할 계획이다.\n","\"\"\"\n","\n","# RF\n","\n","RF = RandomForestRegressor()\n","\n","rf_param_grid = {\n","    'max_depth' : [None] ,\n","    'max_features' : [1 , 3 , 10] ,\n","    'min_samples_split' : [2 , 3 , 10] ,\n","    'min_samples_leaf' : [1 , 3 , 10] ,\n","    'bootstrap' : [False] ,\n","    'n_estimators' : [100 , 300]\n","}\n","\n","gsRFR = GridSearchCV(RF , param_grid = rf_param_grid , cv = kfold , scoring = 'neg_root_mean_squared_error' ,\n","                     n_jobs = 4 , verbose = 1)\n","\n","gsRFR.fit(trainX , trainY)\n","\n","RFC_best = gsRFR.best_estimator_"],"metadata":{"id":"45A09nPbtTVo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["-gsRFR.best_score_"],"metadata":{"id":"XXzqLtAtvo-w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["DTR = DecisionTreeRegressor()\n","\n","adaDTR = AdaBoostRegressor(DTR , random_state = 7)\n","\n","ada_param_grid = {\n","    'base_estimator__criterion' : ['squared_error' , 'absolute_error' , 'poisson'] ,\n","    'base_estimator__splitter' : ['best' , 'random'] ,\n","    'n_estimators' : [1 , 3] ,\n","    'learning_rate' : [0.0001 , 0.001 , 0.01 , 0.1 , 0.2 , 0.3 , 1.5]\n","}\n","\n","gsadaDTR = GridSearchCV(adaDTR , param_grid = ada_param_grid , cv = kfold , scoring = 'neg_root_mean_squared_error' ,\n","                        n_jobs = 4 , verbose = 1)\n","\n","gsadaDTR.fit(trainX , trainY)\n","\n","ada_best = gsadaDTR.best_estimator_"],"metadata":{"id":"Fyk-yVhWBhec"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["gsadaDTR.best_score_"],"metadata":{"id":"pXNLZSKsBhtb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# GBR\n","\n","GBR = GradientBoostingRegressor()\n","\n","gb_param_grid = {\n","    'n_estimators' : [100 , 200 , 300] ,\n","    'learning_rate' : [0.1 , 0.05 , 0.01] ,\n","    'max_depth' : [4 , 8] ,\n","    'min_samples_leaf' : [100 , 150] ,\n","    'max_features' : [0.3 , 0.1]\n","}\n","\n","gsGBR = GridSearchCV(GBR , param_grid = gb_param_grid , cv = kfold , scoring = 'neg_root_mean_squared_error' ,\n","                     n_jobs = 4 , verbose = 1)\n","\n","gsGBR.fit(trainX , trainY)\n","\n","GBC_best = gsGBR.best_estimator_"],"metadata":{"id":"-AbUJqLMwFZ7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["-gsGBR.best_score_"],"metadata":{"id":"_uNlhfCSykPw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# SVR\n","\n","SVR = SVR()\n","\n","svr_param_grid = {\n","    'kernel' : ['rbf'] ,\n","    'gamma' : [0.001 , 0.01 , 0.1 , 1] ,\n","    'C' : [1 , 10 , 50 , 100 , 200 , 300 , 1000]\n","}\n","\n","gsSVR = GridSearchCV(SVR , param_grid = svr_param_grid , cv = kfold , scoring = 'neg_root_mean_squared_error' , n_jobs = 4 ,\n","                     verbose = 1)\n","\n","gsSVR.fit(trainX , trainY)\n","\n","SVR_best = gsSVR.best_estimator_"],"metadata":{"id":"IJK6Q9yS2XtM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["-gsSVR.best_score_"],"metadata":{"id":"aQNy9-pT4S8A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# LGBM\n","\n","LGBM = LGBMRegressor()\n","LGBM.get_params()\n","\n","lgbm_param_grid = {\n","    'n_estimators' : [100 , 200 , 300] ,\n","    'learning_rate' : [0.001 , 0.01 , 0.1 , 1] ,\n","    'max_depth' : [4 , 8]\n","}\n","\n","gsLGBM = GridSearchCV(LGBM , param_grid = lgbm_param_grid , cv = kfold , scoring = 'neg_root_mean_squared_error' , n_jobs = 4 ,\n","                      verbose = 1)\n","\n","gsLGBM.fit(trainX , trainY)\n","\n","LGBM_best = gsLGBM.best_estimator_"],"metadata":{"id":"vOjQ0gwR4VYa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["-gsLGBM.best_score_"],"metadata":{"id":"nWKuUoQw98wm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# XGBR\n","\n","XGBR = XGBRegressor()\n","\n","XGBR.get_params()\n","\n","xgbr_param_grid = {\n","    'n_estimators' : [100 , 200 , 300] ,\n","    'learning_rate' : [0.001 , 0.01 , 0.1 , 1] ,\n","    'max_depth' : [4 , 8]\n","}\n","\n","gsXGBR = GridSearchCV(XGBR , param_grid = xgbr_param_grid , cv = kfold , scoring = 'neg_root_mean_squared_error' , n_jobs = 4 ,\n","                      verbose = 1)\n","\n","gsXGBR.fit(trainX , trainY)\n","\n","XGBR_best = gsXGBR.best_estimator_"],"metadata":{"id":"ps-6eK1Y-8V-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["-gsXGBR.best_score_"],"metadata":{"id":"gc5hEr1n_h73"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 6.3 Voting"],"metadata":{"id":"8akQz0DyATzz"}},{"cell_type":"code","source":["def plot_learning_curve(estimator , title , X , y , ylim = None , cv = None ,\n","                        n_jobs = -1 , train_sizes = np.linspace(.1 , 1.0 , 5)):\n","\n","                        plt.figure()\n","                        plt.title(title)\n","\n","                        if ylim is not None:\n","                            plt.ylim(*ylim)\n","\n","                        plt.xlabel('Training examples')\n","                        plt.ylabel('Score')\n","\n","                        train_sizes , train_scores , test_scores = learning_curve(\n","                            estimator , X , y , cv = cv , n_jobs = n_jobs , train_sizes = train_sizes ,\n","                            scoring = 'neg_root_mean_squared_error'\n","                        )\n","                        train_scores_mean = np.mean(train_scores , axis = 1)\n","                        train_scores_std = np.std(train_scores , axis = 1)\n","                        test_scores_mean = np.mean(test_scores , axis = 1)\n","                        test_scores_std = np.std(test_scores , axis = 1)\n","\n","                        plt.grid()\n","\n","                        plt.fill_between(train_sizes , train_scores_mean - train_scores_std ,\n","                                         train_scores_mean + train_scores_std , alpha = 0.1 ,\n","                                         color = 'r')\n","                        plt.fill_between(train_sizes , test_scores_mean - test_scores_std ,\n","                                         test_scores_mean + test_scores_std , alpha = 0.1 ,\n","                                         color = 'g')\n","\n","                        plt.plot(train_sizes , train_scores_mean , 'o-' , color = 'r' ,\n","                                 label = 'Training score')\n","\n","                        plt.plot(train_sizes , test_scores_mean , 'o-' , color = 'g' ,\n","                                 label = 'Cross-validation score')\n","\n","                        plt.legend(loc = 'best')\n","\n","                        return plt\n","\n","g = plot_learning_curve(gsRFR.best_estimator_ , 'RF Learning curves' , trainX , trainY , cv = kfold)\n","g = plot_learning_curve(gsadaDTR.best_estimator_ , 'Ada Learning curves' , trainX , trainY , cv = kfold)\n","g = plot_learning_curve(gsGBR.best_estimator_ , 'GBR Learning curves' , trainX , trainY , cv = kfold)\n","g = plot_learning_curve(gsSVR.best_estimator_ , 'SVR Learning curves' , trainX , trainY , cv = kfold)\n","g = plot_learning_curve(gsLGBM.best_estimator_ , 'LGBM Learning curves' , trainX , trainY , cv = kfold)\n","g = plot_learning_curve(gsXGBR.best_estimator_ , 'XGBR Learning curves' , trainX , trainY , cv = kfold)"],"metadata":{"id":"sUzjH2kLAVNA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Voting\n","\n","votingR = VotingRegressor(\n","    estimators = [\n","        ('RFR' , RFC_best) ,\n","        ('Ada' , ada_best) ,\n","        ('GBC' , GBC_best) ,\n","        ('SVR' , SVR_best) ,\n","        ('LGBM' , LGBM_best) ,\n","        ('XGBR' , XGBR_best)\n","    ] , n_jobs = 4\n",")\n","\n","votingR = votingR.fit(trainX , trainY)"],"metadata":{"id":"BpfFYdQxEzA0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 6.4 Prediction"],"metadata":{"id":"d7-V7SC3Gcpj"}},{"cell_type":"code","source":["print(f\"Voting Model score (train data) : {votingR.score(trainX , trainY)}\")\n","print(f\"Voting Model score (test data) : {votingR.score(testX , testY)}\")"],"metadata":{"id":"twK3Bw1uFjjp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = votingR.predict(testX)"],"metadata":{"id":"t2AogPOuHoTt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"RMSE : {mean_squared_error(testY , prediction , squared = True)}\")"],"metadata":{"id":"1dCAGPOwHyMp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# submit\n","\n","submission = pd.read_csv(path + \"/sample_submission.csv\")\n","\n","pred = votingR.predict(t_df)\n","pred = np.expm1(pred).astype(int)\n","\n","submission['수요량'] = pred\n","submission"],"metadata":{"id":"6iXU-nMPH-Fi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["submission.to_csv(path + '/submission.csv' , index = False)"],"metadata":{"id":"ToVPEf82IW_E"},"execution_count":null,"outputs":[]}]}